buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

ext['springBootAdminVersion'] = '2.1.1'
ext['springCloudVersion'] = 'Greenwich.M3'

dependencies {
    //implementation('org.springframework.boot:spring-boot-starter-activemq')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    //implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    //implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-hateoas')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-jersey')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')
    //implementation('org.springframework.boot:spring-boot-starter-webflux')
    //implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation('de.codecentric:spring-boot-admin-starter-client')
    implementation('de.codecentric:spring-boot-admin-starter-server')
    //implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
    //implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    implementation('org.springframework.cloud:spring-cloud-starter-security')
    implementation('org.springframework.kafka:spring-kafka')
    implementation('org.springframework.session:spring-session-jdbc')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly('com.h2database:h2')
    runtimeOnly('org.postgresql:postgresql')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    //testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    //testImplementation('io.projectreactor:reactor-test')
    //testImplementation('org.springframework.kafka:spring-kafka-test')
    testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
